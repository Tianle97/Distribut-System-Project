package ie.gmit.sw.Model;

import java.io.StringReader;
import java.io.StringWriter;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Marshaller;
import javax.xml.bind.Unmarshaller;
import javax.xml.transform.stream.StreamSource;

public class JAXBPO {
	public JAXBPO(){
	}
	
	public String getBookingAsXML(BookingCar bookingCar) throws JAXBException {
		// Marshal the BookingCar into XML
		StringWriter sw = new StringWriter();
		Marshaller m;

		
			JAXBContext jc = JAXBContext.newInstance("ie.gmit.sw.ds.Model");
			m = jc.createMarshaller();
			m.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, Boolean.TRUE);
			m.marshal(bookingCar, sw);

		return sw.toString();
	}
	
	// Function to unmarshal the XML to a Java object(BookingCar)
	protected BookingCar getBookingFromXML(String input) throws JAXBException {
		// Unmarshal the Booking from XML
		StringReader sr1 = new StringReader(input);
		Unmarshaller um1;
		BookingCar bookingFromXml = null;

		
			JAXBContext jc = JAXBContext.newInstance("ie.gmit.sw.ds.Model");
			um1 = jc.createUnmarshaller();
			StreamSource source1 = new StreamSource(sr1);
			JAXBElement<BookingCar> bookingElement1 = um1.unmarshal(source1, BookingCar.class);
			bookingFromXml = (BookingCar) bookingElement1.getValue();

		return bookingFromXml;
	}

}
