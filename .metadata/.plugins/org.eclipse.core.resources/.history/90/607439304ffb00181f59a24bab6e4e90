package ie.gmit.sw.DS.RMI.servicesImp;

import java.rmi.RemoteException;
import java.rmi.server.RMIClientSocketFactory;
import java.rmi.server.RMIServerSocketFactory;
import java.rmi.server.UnicastRemoteObject;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import ie.gmit.sw.DS.RMI.model.BookingCar;
import ie.gmit.sw.DS.RMI.services.BookingCarService;

public class BookingCarServiceImp extends UnicastRemoteObject implements BookingCarService {

	private static final long serialVersionUID = 1L;
	ArrayList<BookingCar> lbd;

	protected BookingCarServiceImp(int port, RMIClientSocketFactory csf, RMIServerSocketFactory ssf)
			throws RemoteException {
		super(port, csf, ssf);
		// TODO Auto-generated constructor stub
	}

	// load booking data
	public void loadBookingData() {
		DateFormat df = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
		Date date = new Date();
		lbd = new ArrayList<BookingCar>();
		lbd.add(new BookingCar("Martin", "Mercedes-Benz", 9000000, df.format(date)));
		lbd.add(new BookingCar("John", "Bavarian Motor Work", 900000, df.format(date)));
		lbd.add(new BookingCar("Mark", "SKODA", 8000000, df.format(date)));
		lbd.add(new BookingCar("Jim", "Mercedes-Benz", 2000000, df.format(date)));
	}

	//getAll Information
	@Override
	public List<BookingCar> getAll() throws RemoteException {
		for(BookingCar bc : lbd)
		{
			System.out.println(bc.toString());
		}
		return lbd;
	}

	@Override
	public BookingCar getInfo(String userName, String carName) throws RemoteException {
		for(BookingCar bc : lbd)
		{
			if (bc.getUserName().equals(userName) && bc.getCarName().equals(carName))
			{
				lbd.remove(bc);
				return "remove successful!";
			}
				
			System.out.println(bc.toString());
		}
		return null;
	}

	@Override
	public BookingCar deleteInfo(String userName, String carName) throws RemoteException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public BookingCar createInfo(String userName, String carName) throws RemoteException {
		// TODO Auto-generated method stub
		return null;
	}


}
